[runtime]
sampler = test


[test]
save_dir=buzzard_output
fatal_errors=T


[pipeline]
#modules = consistency camb sigma8_rescale number_count
modules = consistency camb number_count
values = tests/number_count_value_buzzard.ini
likelihoods = 
priors =
extra_output = 
quiet=T
debug=T
timing=F

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2200
feedback=2
zmin = 0.0
zmax = 1.0
nz = 51
kmax = 50.0
k_eta_max_scalar=4400
do_tensors= F



#Set feedback to:
#feedback = 1 for d n(Lambda,z)/dz = int_0^inf dLn(M) M n(M,z) Phi(M)
#feedback = 2 for d n(Lambda,z)/dz = int_0^inf dLn(M) M n(M,z) Phi(M) * M
#feedback = 3 for d n(Lambda,z)/dz = int_0^inf dLn(M) M n(M,z) Phi(M) * b(M,z)
# Define Delta_crit or Delta_mean according to your mass definition
[number_count]
file = modules/clusters/number_count/number_count_module.so
feedback=1
#Delta_mean=200.0
Delta_crit=200.0
#Delta_Omg=4.569255
#Delta_Omg=12.566370614359172
Delta_Omg=3.141592653589793
minimum_redshift=0.1
maximum_redshift=0.8
num_redshift_bin=7
minimum_lambda=20.0
maximum_lambda=125.0
num_lambda_bin=15


[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[sigma8_rescale]
file = cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py
