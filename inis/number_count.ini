[runtime]
sampler = test


[test]
save_dir=number_count_output
fatal_errors=T


[pipeline]
modules = consistency camb number_count
values = tests/number_count_value.ini
likelihoods = 
priors =
extra_output = 
quiet=T
debug=T
timing=F

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2200
feedback=-10
zmin = 0.00
zmax = 0.60
nz = 20
kmax = 50.0
k_eta_max_scalar=4400
do_tensors= F


[number_count]
file = modules/clusters/number_count/number_count_module.so
feedback=1
# Define Delta_crit or Delta_mean according to your mass definition
Delta_mean=200.0
#Delta_crit=200.0
Delta_Omg=3.04755509051

num_redshift_bin=1

num_lambda_bin=5

# File which contains z and lambda bin
data_file_bin=${COSMOSIS_SRC_DIR}/modules/data/z_lambda_bins.dat

# Upper limit for mass integral
Log10Mmax=16.6

# If true use effective area
# if false use Delta_Omg
use_eff_area=T


# If true use the HOD model for the richenss-mass relation
# if false use power-law model for the richenss-mass relation
# NOTE if false LOG10MMINSAT sets the mass threshold used to compute the mass integral
use_HOD_LM_rel=T


# If true use a power law mass dependent intrinsic scatter: \sigma(M)=\sigma0*(M/M*)^q
# If false use a linear mass dependent intrinsic scatter: \sigma(M)=\sigma0+q*Ln(M/M*)
# NOTE: relevant only if q != 0
use_powlaw_mass_scat=T

#if true use a skew-noraml distriubtion for P(\lambda_True|M)
#if false use a Log-noraml distriubtion for P(\lambda_True|M)
use_skewnorm=T

# If true use the model for P(\lambda_ob|\lambda_True)
# If false it set P(\lambda_ob|\lambda_True)=\delta(\lambda_ob-\lambda_True)
use_P_lob_ltr= T
PDF_lob_lin_version=v27

# Used only if use_skewnorm=false or use_P_lob_ltr= false and thus P(\lambda_True|M)=LogNormal
# If false the scatter in the richness-mass relation is given by an intrinsic scatter + Poisson term
# If true the scatter in the richness-mass relation is given only be the intrinsic scatter
use_only_intr_scat=F

# Used only if use_skewnorm=false or use_P_lob_ltr= false and thus P(\lambda_True|M)=LogNormal
# If true the mean of the LogNormal distriubtion is  <ln(Lambda(M))>=ln<Lambda(M)>-0.5*Sigma
# If false the mean of the LogNormal distriubtion is  <ln(Lambda(M))>=ln(Lambda(M))
LMrel_is_mean=T

use_NC_data = T


# If true use the full covariance matrix for the number counts
# If false use only the diagonal of the covariance matrix for the number counts
use_full_NC_cov = F

# Used only if use_full_NC_cov = F
# If true consider only the Poisson error in the diagonal of the covariance matrix for the number counts
use_only_Poisson_cov= T

# Used only if use_only_Poisson_cov= F
# If true the window function used to compute the sample variance is a nut-shell
# If false the window function used to compute the sample variance is a sphere
use_wind_func=F

use_WL_mass = T


# If false use only the HMF_INTER and HMF_SLOPE parameters to correct the HMF
# If true apply also a z-dependent correction to the HMF to reproduce the BUZZARD HMF
# IF true better fix HMF_INTER=1 and HMF_SLOPE=0
use_BuzzardHMFcorr=F

# If true apply a correction to the HMF to account for baryon physic effect
use_HMF_b_corr= F


# If true consider photo-z error to compute NC and M_WL
# If false neglect photo-z error to compute NC and M_WL
add_photoz_scat=T


[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

